// ---------------------------------------------------------------------
// This file is auto-generated by behaviac designer, so please don't modify it by yourself!
// ---------------------------------------------------------------------

#ifndef _BEHAVIAC_AGENT_PROPERTIES_H_
#define _BEHAVIAC_AGENT_PROPERTIES_H_

#include "behaviac_agent_headers.h"
#include "behaviac_agent_member_visitor.h"

namespace behaviac
{
	// ---------------------------------------------------------------------
	// Delegate methods
	// ---------------------------------------------------------------------

	inline void FunctionPointer_behaviac_Agent_LogMessage(char* param0) { behaviac::Agent::LogMessage(param0); }
	inline void FunctionPointer_behaviac_Agent_VectorAdd(IList& param0, System::Object& param1) { behaviac::Agent::VectorAdd(param0, param1); }
	inline void FunctionPointer_behaviac_Agent_VectorClear(IList& param0) { behaviac::Agent::VectorClear(param0); }
	inline bool FunctionPointer_behaviac_Agent_VectorContains(IList& param0, System::Object& param1) { return behaviac::Agent::VectorContains(param0, param1); }
	inline int FunctionPointer_behaviac_Agent_VectorLength(IList& param0) { return behaviac::Agent::VectorLength(param0); }
	inline void FunctionPointer_behaviac_Agent_VectorRemove(IList& param0, System::Object& param1) { behaviac::Agent::VectorRemove(param0, param1); }

	inline void Set_CBTPlayer_m_iBaseSpeed(Agent* self, unsigned int value) { ((CBTPlayer*)self)->_Get_Property_<PROPERTY_TYPE_CBTPlayer_m_iBaseSpeed, unsigned int >() = value; };
	inline const void* Get_CBTPlayer_m_iBaseSpeed(Agent* self) { return &((CBTPlayer*)self)->_Get_Property_<PROPERTY_TYPE_CBTPlayer_m_iBaseSpeed, unsigned int >(); };

	inline behaviac::EBTStatus FunctionPointer_CBTPlayer_Action1(Agent* self) { return (behaviac::EBTStatus)((CBTPlayer*)self)->_Execute_Method_<METHOD_TYPE_CBTPlayer_Action1, behaviac::EBTStatus >(); }
	inline behaviac::EBTStatus FunctionPointer_CBTPlayer_Action3(Agent* self) { return (behaviac::EBTStatus)((CBTPlayer*)self)->_Execute_Method_<METHOD_TYPE_CBTPlayer_Action3, behaviac::EBTStatus >(); }
	inline bool FunctionPointer_CBTPlayer_Condition(Agent* self) { return (bool)((CBTPlayer*)self)->_Execute_Method_<METHOD_TYPE_CBTPlayer_Condition, bool >(); }
	inline void FunctionPointer_CBTPlayer_MoveAhead(Agent* self, int param0) { ((CBTPlayer*)self)->_Execute_Method_<METHOD_TYPE_CBTPlayer_MoveAhead, void, int >(param0); }
	inline void FunctionPointer_CBTPlayer_MoveBack(Agent* self, int param0) { ((CBTPlayer*)self)->_Execute_Method_<METHOD_TYPE_CBTPlayer_MoveBack, void, int >(param0); }
	inline void FunctionPointer_CBTPlayer_LogMessage(char* param0) { CBTPlayer::LogMessage(param0); }
	inline void FunctionPointer_CBTPlayer_VectorAdd(IList& param0, System::Object& param1) { CBTPlayer::VectorAdd(param0, param1); }
	inline void FunctionPointer_CBTPlayer_VectorClear(IList& param0) { CBTPlayer::VectorClear(param0); }
	inline bool FunctionPointer_CBTPlayer_VectorContains(IList& param0, System::Object& param1) { return CBTPlayer::VectorContains(param0, param1); }
	inline int FunctionPointer_CBTPlayer_VectorLength(IList& param0) { return CBTPlayer::VectorLength(param0); }
	inline void FunctionPointer_CBTPlayer_VectorRemove(IList& param0, System::Object& param1) { CBTPlayer::VectorRemove(param0, param1); }
}
#endif // _BEHAVIAC_AGENT_PROPERTIES_H_
