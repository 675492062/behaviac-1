// ---------------------------------------------------------------------
// This file is auto-generated by behaviac designer, so please don't modify it by yourself!
// ---------------------------------------------------------------------

#ifndef _BEHAVIAC_AGENT_PROPERTIES_H_
#define _BEHAVIAC_AGENT_PROPERTIES_H_

#include "behaviac_agent_headers.h"
#include "behaviac_agent_member_visitor.h"

namespace behaviac
{
	// ---------------------------------------------------------------------
	// Delegate methods
	// ---------------------------------------------------------------------

	inline void FunctionPointer_behaviac_Agent_LogMessage(char* param0) { behaviac::Agent::LogMessage(param0); }
	inline void FunctionPointer_behaviac_Agent_VectorAdd(IList& param0, System::Object& param1) { behaviac::Agent::VectorAdd(param0, param1); }
	inline void FunctionPointer_behaviac_Agent_VectorClear(IList& param0) { behaviac::Agent::VectorClear(param0); }
	inline bool FunctionPointer_behaviac_Agent_VectorContains(IList& param0, System::Object& param1) { return behaviac::Agent::VectorContains(param0, param1); }
	inline int FunctionPointer_behaviac_Agent_VectorLength(IList& param0) { return behaviac::Agent::VectorLength(param0); }
	inline void FunctionPointer_behaviac_Agent_VectorRemove(IList& param0, System::Object& param1) { behaviac::Agent::VectorRemove(param0, param1); }

	inline void Set_framework_GameObject_age(Agent* self, long value) { ((framework::GameObject*)self)->_Get_Property_<framework::PROPERTY_TYPE_framework_GameObject_age, long >() = value; };
	inline const void* Get_framework_GameObject_age(Agent* self) { return &((framework::GameObject*)self)->_Get_Property_<framework::PROPERTY_TYPE_framework_GameObject_age, long >(); };

	inline void Set_framework_GameObject_HP(Agent* self, unsigned int value) { ((framework::GameObject*)self)->_Get_Property_<framework::PROPERTY_TYPE_framework_GameObject_HP, unsigned int >() = value; };
	inline const void* Get_framework_GameObject_HP(Agent* self) { return &((framework::GameObject*)self)->_Get_Property_<framework::PROPERTY_TYPE_framework_GameObject_HP, unsigned int >(); };

	inline bool FunctionPointer_framework_GameObject_alignedWithPlayer(Agent* self) { return (bool)((framework::GameObject*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_GameObject_alignedWithPlayer, bool >(); }
	inline float FunctionPointer_framework_GameObject_distanceToPlayer(Agent* self) { return (float)((framework::GameObject*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_GameObject_distanceToPlayer, float >(); }
	inline void FunctionPointer_framework_GameObject_GoStraight(Agent* self, int param0) { ((framework::GameObject*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_GameObject_GoStraight, void, int >(param0); }
	inline bool FunctionPointer_framework_GameObject_playerIsAligned(Agent* self) { return (bool)((framework::GameObject*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_GameObject_playerIsAligned, bool >(); }
	inline bool FunctionPointer_framework_GameObject_projectileNearby(Agent* self, float param0) { return (bool)((framework::GameObject*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_GameObject_projectileNearby, bool, float >(param0); }
	inline int FunctionPointer_framework_GameObject_TurnTowardsTarget(Agent* self, float param0) { return (int)((framework::GameObject*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_GameObject_TurnTowardsTarget, int, float >(param0); }
	inline void FunctionPointer_framework_GameObject_LogMessage(char* param0) { framework::GameObject::LogMessage(param0); }
	inline void FunctionPointer_framework_GameObject_VectorAdd(IList& param0, System::Object& param1) { framework::GameObject::VectorAdd(param0, param1); }
	inline void FunctionPointer_framework_GameObject_VectorClear(IList& param0) { framework::GameObject::VectorClear(param0); }
	inline bool FunctionPointer_framework_GameObject_VectorContains(IList& param0, System::Object& param1) { return framework::GameObject::VectorContains(param0, param1); }
	inline int FunctionPointer_framework_GameObject_VectorLength(IList& param0) { return framework::GameObject::VectorLength(param0); }
	inline void FunctionPointer_framework_GameObject_VectorRemove(IList& param0, System::Object& param1) { framework::GameObject::VectorRemove(param0, param1); }

	inline void Set_framework_Projectile_age(Agent* self, long value) { ((framework::Projectile*)self)->_Get_Property_<framework::PROPERTY_TYPE_framework_Projectile_age, long >() = value; };
	inline const void* Get_framework_Projectile_age(Agent* self) { return &((framework::Projectile*)self)->_Get_Property_<framework::PROPERTY_TYPE_framework_Projectile_age, long >(); };

	inline void Set_framework_Projectile_HP(Agent* self, unsigned int value) { ((framework::Projectile*)self)->_Get_Property_<framework::PROPERTY_TYPE_framework_Projectile_HP, unsigned int >() = value; };
	inline const void* Get_framework_Projectile_HP(Agent* self) { return &((framework::Projectile*)self)->_Get_Property_<framework::PROPERTY_TYPE_framework_Projectile_HP, unsigned int >(); };

	inline bool FunctionPointer_framework_Projectile_alignedWithPlayer(Agent* self) { return (bool)((framework::GameObject*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_GameObject_alignedWithPlayer, bool >(); }
	inline float FunctionPointer_framework_Projectile_distanceToPlayer(Agent* self) { return (float)((framework::GameObject*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_GameObject_distanceToPlayer, float >(); }
	inline void FunctionPointer_framework_Projectile_GoStraight(Agent* self, int param0) { ((framework::GameObject*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_GameObject_GoStraight, void, int >(param0); }
	inline bool FunctionPointer_framework_Projectile_playerIsAligned(Agent* self) { return (bool)((framework::GameObject*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_GameObject_playerIsAligned, bool >(); }
	inline bool FunctionPointer_framework_Projectile_projectileNearby(Agent* self, float param0) { return (bool)((framework::GameObject*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_GameObject_projectileNearby, bool, float >(param0); }
	inline int FunctionPointer_framework_Projectile_TurnTowardsTarget(Agent* self, float param0) { return (int)((framework::GameObject*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_GameObject_TurnTowardsTarget, int, float >(param0); }
	inline void FunctionPointer_framework_Projectile_LogMessage(char* param0) { framework::Projectile::LogMessage(param0); }
	inline void FunctionPointer_framework_Projectile_VectorAdd(IList& param0, System::Object& param1) { framework::Projectile::VectorAdd(param0, param1); }
	inline void FunctionPointer_framework_Projectile_VectorClear(IList& param0) { framework::Projectile::VectorClear(param0); }
	inline bool FunctionPointer_framework_Projectile_VectorContains(IList& param0, System::Object& param1) { return framework::Projectile::VectorContains(param0, param1); }
	inline int FunctionPointer_framework_Projectile_VectorLength(IList& param0) { return framework::Projectile::VectorLength(param0); }
	inline void FunctionPointer_framework_Projectile_VectorRemove(IList& param0, System::Object& param1) { framework::Projectile::VectorRemove(param0, param1); }

	inline void Set_framework_Ship_age(Agent* self, long value) { ((framework::Ship*)self)->_Get_Property_<framework::PROPERTY_TYPE_framework_Ship_age, long >() = value; };
	inline const void* Get_framework_Ship_age(Agent* self) { return &((framework::Ship*)self)->_Get_Property_<framework::PROPERTY_TYPE_framework_Ship_age, long >(); };

	inline void Set_framework_Ship_HP(Agent* self, unsigned int value) { ((framework::Ship*)self)->_Get_Property_<framework::PROPERTY_TYPE_framework_Ship_HP, unsigned int >() = value; };
	inline const void* Get_framework_Ship_HP(Agent* self) { return &((framework::Ship*)self)->_Get_Property_<framework::PROPERTY_TYPE_framework_Ship_HP, unsigned int >(); };

	inline behaviac::EBTStatus FunctionPointer_framework_Ship_checkresult(Agent* self, bool param0) { return (behaviac::EBTStatus)((framework::Ship*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_Ship_checkresult, behaviac::EBTStatus, bool >(param0); }
	inline void FunctionPointer_framework_Ship_DestroyAllNearbyProjectiles(Agent* self, float param0) { ((framework::Ship*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_Ship_DestroyAllNearbyProjectiles, void, float >(param0); }
	inline bool FunctionPointer_framework_Ship_Fire(Agent* self) { return (bool)((framework::Ship*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_Ship_Fire, bool >(); }
	inline double FunctionPointer_framework_Ship_GetConstDoubleValue(Agent* self) { return (double)((framework::Ship*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_Ship_GetConstDoubleValue, double >(); }
	inline float FunctionPointer_framework_Ship_GetConstFloatValue(Agent* self) { return (float)((framework::Ship*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_Ship_GetConstFloatValue, float >(); }
	inline float FunctionPointer_framework_Ship_getXPosition(Agent* self) { return (float)((framework::Ship*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_Ship_getXPosition, float >(); }
	inline float FunctionPointer_framework_Ship_getYPosition(Agent* self) { return (float)((framework::Ship*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_Ship_getYPosition, float >(); }
	inline bool FunctionPointer_framework_Ship_GotoPoint(Agent* self, float param0, float param1, float param2) { return (bool)((framework::Ship*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_Ship_GotoPoint, bool, float, float, float >(param0, param1, param2); }
	inline bool FunctionPointer_framework_Ship_GotoPointRelative(Agent* self, float param0, float param1, float param2) { return (bool)((framework::Ship*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_Ship_GotoPointRelative, bool, float, float, float >(param0, param1, param2); }
	inline bool FunctionPointer_framework_Ship_alignedWithPlayer(Agent* self) { return (bool)((framework::GameObject*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_GameObject_alignedWithPlayer, bool >(); }
	inline float FunctionPointer_framework_Ship_distanceToPlayer(Agent* self) { return (float)((framework::GameObject*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_GameObject_distanceToPlayer, float >(); }
	inline void FunctionPointer_framework_Ship_GoStraight(Agent* self, int param0) { ((framework::GameObject*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_GameObject_GoStraight, void, int >(param0); }
	inline bool FunctionPointer_framework_Ship_playerIsAligned(Agent* self) { return (bool)((framework::GameObject*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_GameObject_playerIsAligned, bool >(); }
	inline bool FunctionPointer_framework_Ship_projectileNearby(Agent* self, float param0) { return (bool)((framework::GameObject*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_GameObject_projectileNearby, bool, float >(param0); }
	inline int FunctionPointer_framework_Ship_TurnTowardsTarget(Agent* self, float param0) { return (int)((framework::GameObject*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_GameObject_TurnTowardsTarget, int, float >(param0); }
	inline void FunctionPointer_framework_Ship_LogMessage(char* param0) { framework::Ship::LogMessage(param0); }
	inline void FunctionPointer_framework_Ship_VectorAdd(IList& param0, System::Object& param1) { framework::Ship::VectorAdd(param0, param1); }
	inline void FunctionPointer_framework_Ship_VectorClear(IList& param0) { framework::Ship::VectorClear(param0); }
	inline bool FunctionPointer_framework_Ship_VectorContains(IList& param0, System::Object& param1) { return framework::Ship::VectorContains(param0, param1); }
	inline int FunctionPointer_framework_Ship_VectorLength(IList& param0) { return framework::Ship::VectorLength(param0); }
	inline void FunctionPointer_framework_Ship_VectorRemove(IList& param0, System::Object& param1) { framework::Ship::VectorRemove(param0, param1); }

	inline void Set_framework_WorldState_HealthHP(Agent* self, unsigned int value) { ((framework::WorldState*)self)->_Get_Property_<framework::PROPERTY_TYPE_framework_WorldState_HealthHP, unsigned int >() = value; };
	inline const void* Get_framework_WorldState_HealthHP(Agent* self) { return &((framework::WorldState*)self)->_Get_Property_<framework::PROPERTY_TYPE_framework_WorldState_HealthHP, unsigned int >(); };

	inline void Set_framework_WorldState_SyncSignal(Agent* self, bool value) { ((framework::WorldState*)self)->_Get_Property_<framework::PROPERTY_TYPE_framework_WorldState_SyncSignal, bool >() = value; };
	inline const void* Get_framework_WorldState_SyncSignal(Agent* self) { return &((framework::WorldState*)self)->_Get_Property_<framework::PROPERTY_TYPE_framework_WorldState_SyncSignal, bool >(); };

	inline void Set_framework_WorldState_time(Agent* self, unsigned int value) { ((framework::WorldState*)self)->_Get_Property_<framework::PROPERTY_TYPE_framework_WorldState_time, unsigned int >() = value; };
	inline const void* Get_framework_WorldState_time(Agent* self) { return &((framework::WorldState*)self)->_Get_Property_<framework::PROPERTY_TYPE_framework_WorldState_time, unsigned int >(); };

	inline bool FunctionPointer_framework_WorldState_NextWave(Agent* self) { return (bool)((framework::WorldState*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_WorldState_NextWave, bool >(); }
	inline int FunctionPointer_framework_WorldState_PlayerHP(Agent* self) { return (int)((framework::WorldState*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_WorldState_PlayerHP, int >(); }
	inline void FunctionPointer_framework_WorldState_SpawnShip(Agent* self, int param0) { ((framework::WorldState*)self)->_Execute_Method_<framework::METHOD_TYPE_framework_WorldState_SpawnShip, void, int >(param0); }
	inline void FunctionPointer_framework_WorldState_LogMessage(char* param0) { framework::WorldState::LogMessage(param0); }
	inline void FunctionPointer_framework_WorldState_VectorAdd(IList& param0, System::Object& param1) { framework::WorldState::VectorAdd(param0, param1); }
	inline void FunctionPointer_framework_WorldState_VectorClear(IList& param0) { framework::WorldState::VectorClear(param0); }
	inline bool FunctionPointer_framework_WorldState_VectorContains(IList& param0, System::Object& param1) { return framework::WorldState::VectorContains(param0, param1); }
	inline int FunctionPointer_framework_WorldState_VectorLength(IList& param0) { return framework::WorldState::VectorLength(param0); }
	inline void FunctionPointer_framework_WorldState_VectorRemove(IList& param0, System::Object& param1) { framework::WorldState::VectorRemove(param0, param1); }
}
#endif // _BEHAVIAC_AGENT_PROPERTIES_H_
